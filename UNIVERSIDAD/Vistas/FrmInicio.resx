<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A+WyPEKdXBk+AAAAAElFTkSuQmCC
</value>
  </data>
</root>